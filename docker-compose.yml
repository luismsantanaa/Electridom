version: '3.8'

services:
  # Frontend Angular
  frontend:
    build:
      context: ./calculadora-electrica-frontend
      dockerfile: Dockerfile
    container_name: electridom-frontend
    ports:
      - '8082:80'
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - electridom-network
    environment:
      - NODE_ENV=production

  # Backend NestJS API
  api:
    build:
      context: ./calculadora-electrica-backend
      dockerfile: Dockerfile
    container_name: electridom-api
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_HOST=mariadb
      - DATABASE_PORT=3306
      - DATABASE_USERNAME=electridom
      - DATABASE_PASSWORD=electridom123
      - DATABASE_NAME=electridom
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=900s
      - RULE_CACHE_TTL_MS=60000
      - APPLY_MIGRATIONS_ON_STARTUP=true
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - AI_TIMEOUT_MS=30000
      - METRICS_ENABLED=true
      - CORS_ORIGIN=*
      - RATE_LIMIT_TTL=60
      - RATE_LIMIT_LIMIT=100
      - REFRESH_TTL=30d
      - REFRESH_ROTATE=true
      - REFRESH_SALT=your-refresh-salt-here-make-it-long-and-random
      - REFRESH_COOKIE_ENABLED=false
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - ./calculadora-electrica-backend/logs:/app/logs
    restart: unless-stopped
    networks:
      - electridom-network
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de datos MariaDB
  mariadb:
    image: mariadb:11
    container_name: electridom-mariadb
    environment:
      - MARIADB_ROOT_PASSWORD=rootpassword
      - MARIADB_DATABASE=electridom
      - MARIADB_USER=electridom
      - MARIADB_PASSWORD=electridom123
      - MARIADB_ALLOW_EMPTY_PASSWORD=no
      - MARIADB_CHARACTER_SET_SERVER=utf8mb4
      - MARIADB_COLLATION_SERVER=utf8mb4_unicode_ci
    ports:
      - '3306:3306'
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./mariadb-custom.cnf:/etc/mysql/conf.d/custom.cnf:ro
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    healthcheck:
      test:
        ['CMD', 'mariadb', '-u', 'root', '-prootpassword', '-e', 'SELECT 1;']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - electridom-network



  # Ollama - LLM Local
  ollama:
    image: ollama/ollama:latest
    container_name: electridom-ollama
    ports:
      - '11434:11434'
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    restart: unless-stopped
    networks:
      - electridom-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:11434/api/version']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Open WebUI - Interfaz web para Ollama
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: electridom-openwebui
    ports:
      - '3001:8080'
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_SECRET_KEY=your-secret-key-here
      - DEFAULT_USER_ROLE=admin
    depends_on:
      - ollama
    restart: unless-stopped
    networks:
      - electridom-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Prometheus para m√©tricas
  prometheus:
    image: prom/prometheus:latest
    container_name: electridom-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - electridom-network

volumes:
  mariadb_data:
    driver: local
  ollama_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  electridom-network:
    driver: bridge
    name: electridom-network

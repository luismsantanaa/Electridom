version: '3.8'

services:
  # Frontend Angular
  frontend:
    build:
      context: ./calculadora-electrica-frontend
      dockerfile: Dockerfile
    container_name: electridom-frontend
    ports:
      - '80:80'
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - electridom-network
    environment:
      - NODE_ENV=production

  # Backend NestJS API
  api:
    build:
      context: ./calculadora-electrica-backend
      dockerfile: Dockerfile
    container_name: electridom-api
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_HOST=mariadb
      - DATABASE_PORT=3306
      - DATABASE_USERNAME=electridom
      - DATABASE_PASSWORD=electridom
      - DATABASE_NAME=electridom
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=900s
      - RULE_CACHE_TTL_MS=60000
      - APPLY_MIGRATIONS_ON_STARTUP=true
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - AI_TIMEOUT_MS=30000
      - METRICS_ENABLED=true
      - CORS_ORIGIN=*
      - RATE_LIMIT_TTL=60
      - RATE_LIMIT_LIMIT=100
      - REFRESH_TTL=30d
      - REFRESH_ROTATE=true
      - REFRESH_SALT=your-refresh-salt-here-make-it-long-and-random
      - REFRESH_COOKIE_ENABLED=false
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - ./calculadora-electrica-backend/logs:/app/logs
    restart: unless-stopped
    networks:
      - electridom-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de datos MariaDB
  mariadb:
    image: mariadb:11
    container_name: electridom-mariadb
    environment:
      - MARIADB_USER=electridom
      - MARIADB_PASSWORD=electridom
      - MARIADB_DATABASE=electridom
      - MARIADB_ROOT_PASSWORD=rootpassword
    ports:
      - '3306:3306'
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./calculadora-electrica-backend/src/database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "electridom", "-pelectridom"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - electridom-network

  # Adminer para gestión de base de datos
  adminer:
    image: adminer:latest
    container_name: electridom-adminer
    ports:
      - '8080:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
    depends_on:
      - mariadb
    restart: unless-stopped
    networks:
      - electridom-network

  # Prometheus para métricas (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: electridom-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - electridom-network

volumes:
  mariadb_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  electridom-network:
    driver: bridge

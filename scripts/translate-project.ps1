# Script principal para traducir todo el proyecto del espa√±ol al ingl√©s
# Este script ejecuta tanto la traducci√≥n de contenido como el renombrado de archivos

Write-Host "üåê Traducci√≥n Completa del Proyecto - Espa√±ol a Ingl√©s" -ForegroundColor Cyan
Write-Host "=====================================================" -ForegroundColor Cyan

# Funci√≥n para mostrar el men√∫ principal
function Show-MainMenu {
    Write-Host "`nüìã Opciones disponibles:" -ForegroundColor Yellow
    Write-Host "1. Traducir contenido (nombres, variables, constantes)" -ForegroundColor White
    Write-Host "2. Renombrar archivos (entidades, servicios, controladores)" -ForegroundColor White
    Write-Host "3. Traducci√≥n completa (contenido + archivos)" -ForegroundColor White
    Write-Host "4. Revertir todos los cambios" -ForegroundColor White
    Write-Host "5. Verificar estado actual" -ForegroundColor White
    Write-Host "6. Ayuda" -ForegroundColor White
    Write-Host "0. Salir" -ForegroundColor White
}

# Funci√≥n para traducir contenido
function Start-ContentTranslation {
    Write-Host "`nüîç Iniciando traducci√≥n de contenido..." -ForegroundColor Green
    Write-Host "=========================================" -ForegroundColor Green
    
    # Ejecutar script de traducci√≥n de contenido
    $scriptPath = Join-Path $PSScriptRoot "translate-to-english.ps1"
    if (Test-Path $scriptPath) {
        & $scriptPath
    } else {
        Write-Host "‚ùå No se encontr√≥ el script translate-to-english.ps1" -ForegroundColor Red
    }
}

# Funci√≥n para renombrar archivos
function Start-FileRenaming {
    Write-Host "`nüîÑ Iniciando renombrado de archivos..." -ForegroundColor Green
    Write-Host "=====================================" -ForegroundColor Green
    
    # Ejecutar script de renombrado
    $scriptPath = Join-Path $PSScriptRoot "rename-files.ps1"
    if (Test-Path $scriptPath) {
        & $scriptPath
    } else {
        Write-Host "‚ùå No se encontr√≥ el script rename-files.ps1" -ForegroundColor Red
    }
}

# Funci√≥n para traducci√≥n completa
function Start-CompleteTranslation {
    Write-Host "`nüöÄ Iniciando traducci√≥n completa del proyecto..." -ForegroundColor Green
    Write-Host "===============================================" -ForegroundColor Green
    
    Write-Host "`n‚ö†Ô∏è  ADVERTENCIA: Esta operaci√≥n modificar√° archivos del proyecto." -ForegroundColor Red
    Write-Host "Se crear√°n backups autom√°ticamente, pero se recomienda hacer commit antes." -ForegroundColor Yellow
    Write-Host "`n¬øDeseas continuar? (y/N)" -ForegroundColor Red
    $response = Read-Host
    
    if ($response -ne "y" -and $response -ne "Y") {
        Write-Host "‚ùå Operaci√≥n cancelada" -ForegroundColor Red
        return
    }
    
    # Paso 1: Traducir contenido
    Write-Host "`nüìù Paso 1: Traduciendo contenido..." -ForegroundColor Cyan
    Start-ContentTranslation
    
    # Paso 2: Renombrar archivos
    Write-Host "`nüìÅ Paso 2: Renombrando archivos..." -ForegroundColor Cyan
    Start-FileRenaming
    
    Write-Host "`n‚úÖ Traducci√≥n completa finalizada!" -ForegroundColor Green
    Write-Host "üìù Recuerda revisar los cambios y hacer commit" -ForegroundColor Yellow
}

# Funci√≥n para revertir cambios
function Revert-AllChanges {
    Write-Host "`nüîÑ Revirtiendo todos los cambios..." -ForegroundColor Yellow
    Write-Host "=================================" -ForegroundColor Yellow
    
    Write-Host "‚ö†Ô∏è  ¬øEst√°s seguro de que quieres revertir todos los cambios? (y/N)" -ForegroundColor Red
    $response = Read-Host
    
    if ($response -ne "y" -and $response -ne "Y") {
        Write-Host "‚ùå Operaci√≥n cancelada" -ForegroundColor Red
        return
    }
    
    # Revertir traducci√≥n de contenido
    Write-Host "`nüìù Revirtiendo traducci√≥n de contenido..." -ForegroundColor Cyan
    $scriptPath = Join-Path $PSScriptRoot "translate-to-english.ps1"
    if (Test-Path $scriptPath) {
        & $scriptPath -Revert
    }
    
    # Revertir renombrado de archivos
    Write-Host "`nüìÅ Revirtiendo renombrado de archivos..." -ForegroundColor Cyan
    $scriptPath = Join-Path $PSScriptRoot "rename-files.ps1"
    if (Test-Path $scriptPath) {
        & $scriptPath -Revert
    }
    
    Write-Host "`n‚úÖ Todos los cambios han sido revertidos!" -ForegroundColor Green
}

# Funci√≥n para verificar estado
function Check-ProjectStatus {
    Write-Host "`nüîç Verificando estado del proyecto..." -ForegroundColor Cyan
    Write-Host "=====================================" -ForegroundColor Cyan
    
    # Verificar archivos de backup
    $backupFiles = Get-ChildItem -Path "." -Recurse -Filter "*.backup"
    if ($backupFiles.Count -gt 0) {
        Write-Host "üì¶ Archivos de backup encontrados: $($backupFiles.Count)" -ForegroundColor Yellow
        foreach ($backup in $backupFiles) {
            Write-Host "  - $($backup.FullName)" -ForegroundColor Gray
        }
    } else {
        Write-Host "üì¶ No se encontraron archivos de backup" -ForegroundColor Green
    }
    
    # Verificar archivos con nombres en espa√±ol
    $spanishFiles = Get-ChildItem -Path "." -Recurse -File | Where-Object {
        $_.Name -match 'ambiente|carga|consumo|circuito|alimentador|puesta-tierra|reporte'
    }
    
    if ($spanishFiles.Count -gt 0) {
        Write-Host "`nüá™üá∏ Archivos con nombres en espa√±ol encontrados: $($spanishFiles.Count)" -ForegroundColor Yellow
        foreach ($file in $spanishFiles) {
            Write-Host "  - $($file.FullName)" -ForegroundColor Gray
        }
    } else {
        Write-Host "`nüá™üá∏ No se encontraron archivos con nombres en espa√±ol" -ForegroundColor Green
    }
    
    # Verificar contenido en espa√±ol
    $spanishContent = Get-ChildItem -Path "." -Recurse -File -Include "*.ts", "*.js", "*.json" | Where-Object {
        $_.Name -notmatch '\.backup$' -and $_.Name -notmatch '\.md$'
    } | ForEach-Object {
        $content = Get-Content $_.FullName -Raw -ErrorAction SilentlyContinue
        if ($content -match '\b(ambiente|carga|consumo|circuito|alimentador|puesta_tierra|reporte)\b') {
            $_
        }
    }
    
    if ($spanishContent.Count -gt 0) {
        Write-Host "`nüìù Archivos con contenido en espa√±ol: $($spanishContent.Count)" -ForegroundColor Yellow
        foreach ($file in $spanishContent) {
            Write-Host "  - $($file.FullName)" -ForegroundColor Gray
        }
    } else {
        Write-Host "`nüìù No se encontraron archivos con contenido en espa√±ol" -ForegroundColor Green
    }
}

# Funci√≥n para mostrar ayuda
function Show-Help {
    Write-Host "`nüìö Ayuda - Traducci√≥n del Proyecto" -ForegroundColor Cyan
    Write-Host "===================================" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "Este script permite traducir todo el proyecto del espa√±ol al ingl√©s:" -ForegroundColor White
    Write-Host ""
    Write-Host "üîç Traducci√≥n de contenido:" -ForegroundColor Yellow
    Write-Host "  - Nombres de variables y constantes" -ForegroundColor Gray
    Write-Host "  - Nombres de clases y m√©todos" -ForegroundColor Gray
    Write-Host "  - Comentarios y mensajes" -ForegroundColor Gray
    Write-Host "  - Configuraciones y par√°metros" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üìÅ Renombrado de archivos:" -ForegroundColor Yellow
    Write-Host "  - Entidades (ambiente -> environment)" -ForegroundColor Gray
    Write-Host "  - Servicios y controladores" -ForegroundColor Gray
    Write-Host "  - Tests y migraciones" -ForegroundColor Gray
    Write-Host "  - Actualizaci√≥n autom√°tica de referencias" -ForegroundColor Gray
    Write-Host ""
    Write-Host "‚ö†Ô∏è  IMPORTANTE:" -ForegroundColor Red
    Write-Host "  - Se crean backups autom√°ticamente" -ForegroundColor Gray
    Write-Host "  - Se puede revertir en cualquier momento" -ForegroundColor Gray
    Write-Host "  - Se recomienda hacer commit antes de ejecutar" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üîÑ Revertir cambios:" -ForegroundColor Yellow
    Write-Host "  - Restaura todos los archivos originales" -ForegroundColor Gray
    Write-Host "  - Elimina archivos de backup" -ForegroundColor Gray
}

# Funci√≥n principal
function Start-TranslationProject {
    do {
        Show-MainMenu
        Write-Host "`nSelecciona una opci√≥n (0-6): " -ForegroundColor Yellow -NoNewline
        $choice = Read-Host
        
        switch ($choice) {
            "1" { Start-ContentTranslation }
            "2" { Start-FileRenaming }
            "3" { Start-CompleteTranslation }
            "4" { Revert-AllChanges }
            "5" { Check-ProjectStatus }
            "6" { Show-Help }
            "0" { 
                Write-Host "`nüëã ¬°Hasta luego!" -ForegroundColor Green
                return 
            }
            default { 
                Write-Host "`n‚ùå Opci√≥n no v√°lida. Intenta de nuevo." -ForegroundColor Red 
            }
        }
        
        if ($choice -ne "0") {
            Write-Host "`nPresiona Enter para continuar..." -ForegroundColor Gray
            Read-Host
        }
    } while ($choice -ne "0")
}

# Funci√≥n para procesar argumentos de l√≠nea de comandos
function Process-CommandLineArgs {
    if ($args.Count -eq 0) {
        Start-TranslationProject
        return
    }
    
    switch ($args[0]) {
        "-content" { Start-ContentTranslation }
        "-files" { Start-FileRenaming }
        "-complete" { Start-CompleteTranslation }
        "-revert" { Revert-AllChanges }
        "-status" { Check-ProjectStatus }
        "-help" { Show-Help }
        default {
            Write-Host "‚ùå Argumento no v√°lido: $($args[0])" -ForegroundColor Red
            Write-Host "Use -help para ver las opciones disponibles" -ForegroundColor Yellow
        }
    }
}

# Ejecutar script
Process-CommandLineArgs $args
